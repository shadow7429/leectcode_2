// startTime: 23: 55
// finishTime: 24: 06
// https://leetcode.com/problems/search-a-2d-matrix/

// 思路就是先找到在哪一行然后在对那一行用二叉搜索
public class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {
        if (matrix.length == 0 || matrix[0].length == 0) return false;
        int row = -1;
        for (int i = 0; i < matrix.length - 1; i++){
            if (target >= matrix[i][0] && target < matrix[i + 1][0]){
                row = i;
                break;
            } 
        }
        if (row == -1){
            if (target >= matrix[matrix.length - 1][0]) row = matrix.length - 1;
            else return false;
        }
        
        int lo = 0;
        int hi = matrix[row].length - 1;
        while (lo <= hi){
            int mid = lo + (hi - lo) / 2;
            if (matrix[row][mid] == target) return true;
            else if (matrix[row][mid] > target) hi = mid - 1;
            else if (matrix[row][mid] < target) lo = mid + 1;
        }
        return false;
    }
}
