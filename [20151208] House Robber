// startTime: 11: 16
// finishTime: 11: 30
// https://leetcode.com/problems/house-robber/

/*
这就是不能连续的动态规划问题，关键是当前位置得到的财富，要么是前面一个位置得到的财富，此时不rob当前
住户，要么就是前面再前面一个位置得到的财富加上rob当前住户得到的财富。
*/
public class Solution {
    public int rob(int[] nums) {
        if (nums == null || nums.length == 0) return 0;
        int[] helper = new int[nums.length + 1];
        helper[0] = 0;
        helper[1] = nums[0];
        for (int i = 1; i < nums.length; i++){
            helper[i + 1] = Math.max(helper[i], helper[i - 1] + nums[i]);
        }
        return helper[helper.length - 1];
    }
}
