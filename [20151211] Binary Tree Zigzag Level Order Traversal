// startTime: 15: 50
// finishTime: 16: 12
// https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal/


public class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> res = new ArrayList<List<Integer>>();
        if (root == null) return res;
        LinkedList<TreeNode> l1 = new LinkedList<TreeNode>();
        LinkedList<TreeNode> l2 = new LinkedList<TreeNode>();
        l1.add(root);
        List<Integer> level = new ArrayList<Integer>();
        level.add(root.val);
        res.add(level);
        level = new ArrayList<Integer>();
        boolean re = true;
        while (l1.size() > 0 || l2.size() > 0){
            if (l1.size() == 0){
                res.add(level);
                l1.addAll(l2);
                l2.clear();
                level = new ArrayList<Integer>();
                re = re == true ? false : true;
            }
            else{
                if (re == true){
                    TreeNode n = l1.removeLast();
                    if (n.right != null) {
                        l2.add(n.right);
                        level.add(n.right.val);
                    }
                    if (n.left != null) {
                        l2.add(n.left);
                        level.add(n.left.val);
                    }
                }
                else{
                    TreeNode n = l1.removeLast();
                    if (n.left != null) {
                        l2.add(n.left);
                        level.add(n.left.val);
                    }
                    if (n.right != null) {
                        l2.add(n.right);
                        level.add(n.right.val);
                    }
                }
            }
        }
        return res;
    }
}
