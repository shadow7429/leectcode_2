// https://leetcode.com/problems/best-time-to-buy-and-sell-stock/

/*
其实就是找一个数组中后面减前面的最大差值。
*/
public class Solution {
    public int maxProfit(int[] prices) {
        if (prices == null || prices.length == 0) return 0;
        int res = Integer.MIN_VALUE;
        int buy = prices[0];
        int sell = prices[0];
        for (int i = 0; i < prices.length; i++){
            if (prices[i] < buy){
                res = Math.max(sell - buy, res);
                buy = prices[i];
                sell = buy;
            }
            else if (prices[i] > sell){
                sell = prices[i];
            }
        }
        res = Math.max(res, sell - buy);
        return res;
    }
}
