// iterative的方法超时了。
// https://leetcode.com/problems/serialize-and-deserialize-binary-tree/

/*
转成string的时候就选择一个遍历的方式然后得出遍历的序列即可，然后deserialize的时候
同样也是按照一样的方式得到tree。
*/
public class Codec {

    // Encodes a tree to a single string.
    private static final String spliter = ",";
    private static final String NN = "X";
    
    public String serialize(TreeNode root) {
        StringBuilder sb = new StringBuilder();
        buildString(root, sb);
        return sb.toString();
    }
    private void buildString(TreeNode node, StringBuilder sb){
        if (node == null) sb.append(NN).append(spliter);
        else{
            sb.append(node.val).append(spliter);
            buildString(node.left, sb);
            buildString(node.right, sb);
        }
    }

    // Decodes your encoded data to tree.
    public TreeNode deserialize(String data) {
        Deque<String> nodes = new LinkedList<>();
        nodes.addAll(Arrays.asList(data.split(spliter)));
        return buildTree(nodes);
    }
    
    private TreeNode buildTree(Deque<String> nodes){
        String val = nodes.remove();
        if (val.equals(NN)) return null;
        else{
            TreeNode node = new TreeNode(Integer.valueOf(val));
            node.left = buildTree(nodes);
            node.right = buildTree(nodes);
            return node;
        }
    }
}
