// 形成naive的方法时间很短，但是没道理medium的题是这样子呀，果然是有好方法的。

public class Solution {
    public int findPeakElement(int[] nums) {
        if (nums.length == 0) return 0;
        if (nums.length == 1) return 0;
        for (int i = 0; i < nums.length; i++){
            if (i == 0){
                if (nums[i] > nums[i + 1]) return i;
            }
            else if(i == nums.length - 1){
                if (nums[i] > nums[i - 1]) return i;
            }
            else{
               if (nums[i] > nums[i - 1] && nums[i] > nums[i + 1]) return i; 
            } 
        }
        return nums.length - 1;
    }
}

// 但是其实好方法不太懂，一会儿问。
public int findPeakElement(int[] num) {    
    return helper(num,0,num.length-1);
}

public int helper(int[] num,int start,int end){
    if (start == end){
        return start;
    }else if (start + 1 == end){
        if(num[start] > num[end]) return start;
        return end;
    }else{

        int m = (start + end)/2;

        if(num[m] > num[m - 1] && num[m] > num[m + 1]){

            return m;

        }else if(num[m - 1] > num[m] && num[m] > num[m + 1]){

            return helper(num,start,m - 1);

        }else{

            return helper(num,m + 1,end);

        }

    }
}
