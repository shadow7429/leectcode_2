// 只能拿出来最naive的排序之后求的方法，这个discuss上的思路是有的，但是操作出现差错TAT，要加强能力啊！！！
// https://leetcode.com/problems/kth-largest-element-in-an-array/

/*
这道题的思路就是利用快速排序的知识，partition函数的作用就是将数组j位置处弄成j左边的数都比j处的数小，j右边
的数都比j处的大，然后返回到findKthLargest函数中，若是j恰好等于k，那么也就是说我们找到了第k个大的数。若j比
k大，那就说明前j个最大的数已经找到，现在我们要继续j左边的数进行partition操作，直到j等于k，同理当j小于k的时候。
*/
public class Solution {
    public int findKthLargest(int[] nums, int k) {
        k = nums.length - k;
        int lo = 0;
        int hi = nums.length - 1;
        while (lo < hi){
            int j = partition(nums, lo, hi);
            if (j < k) lo = j + 1;
            else if (j > k) hi = j - 1;
            else break;
        }
        return nums[k];
    }
    
    public int partition(int[] a, int lo, int hi){
        int i = lo;
        int j = hi + 1;
        while (true){
            while (i < hi && a[++i] < a[lo]);
            while (j > lo && a[--j] > a[lo]);
            if (i >= j) break;
            exch(a, i, j);
        }
        exch(a, lo, j);
        return j;
    }
    
    private void exch(int[]a, int i, int j){
        int tmp = a[i];
        a[i] = a[j];
        a[j] = tmp;
    }
}
