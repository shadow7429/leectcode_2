// startTime: 10: 20
// finishTime: 10: 41
// https://leetcode.com/problems/word-search/

public class Solution {
    public boolean exist(char[][] board, String word) {
        if (board.length == 0 || board[0].length == 0) return false;
        int[][] dp = new int[board.length][board[0].length];
        for (int i = 0; i < board.length; i++){
            for (int j = 0; j < board[0].length; j++){
                if (board[i][j] == word.charAt(0)){
                    if (helper(board, i, j, dp, 0, word) == true) return true;
                }
            }
        }
        return false;
    }
    public boolean helper(char[][]board, int i, int j, int[][]dp, int length, String word){
        if (length == word.length()) return true;
        if (i >= board.length || j >= board[0].length || i < 0 || j < 0 || dp[i][j] == 1) return false;
        if (board[i][j] != word.charAt(length)) return false;
        dp[i][j] = 1;
        boolean left = helper(board, i, j - 1, dp, length + 1, word);
        boolean right = helper(board, i, j + 1, dp, length + 1, word);
        boolean up = helper(board, i + 1, j, dp, length + 1, word);
        boolean down = helper(board, i - 1, j, dp, length + 1, word);
        if (left || right || up || down) return true;
        else {
            dp[i][j] = 0;
            return false;
        }
    }
}
/*
其实这种题只要别紧张，别出现index上面的错误，思路清晰一点是很简单的，在interview的时候先想清楚，在纸上写出来，然后
再敲，要不会出现很多bug。
*/
