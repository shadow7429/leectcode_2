// startTime: 10: 50
// finishTime: 11: 16
// https://leetcode.com/problems/add-two-numbers/


/*
需要注意的是，在list的操作中，如果我们想在list的末端添加一个新的节点，不能用一个pointer一直走到了null然后将这个
pointer = new ListNode(number)这样操作，这样是不能在末端添加上的，必须走到最后一个非null的节点，然后将新的节点
赋给它的next即：p.next = new ListNode(number);
*/
public class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        if (l1 == null || l2 == null) return l1 == null ? l2 : l1;
        int len1 = 0;
        int len2 = 0;
        ListNode p = l1;
        while (p != null){
            len1++;
            p = p.next;
        }
        p = l2;
        while (p != null){
            len2++;
            p = p.next;
        }
        p = len1 >= len2 ? l1 : l2;
        ListNode res = p;
        int carry = 0;
        ListNode pre = p;
        while (p != null){
            if (l1 != null && l2 != null){
                int tmp = l1.val + l2.val + carry;
                p.val = tmp % 10;
                carry = tmp / 10;
                l1 = l1.next;
                l2 = l2.next;
            }
            else{
                if (carry == 0) break;
                else{
                    int tmp = p.val + carry;
                    p.val = tmp % 10;
                    carry = tmp / 10;
                }
            }
            pre = p;
            p = p.next;
        }
        
        if (carry != 0){
            pre.next = new ListNode(carry);
        }
        return res;
    }
}
