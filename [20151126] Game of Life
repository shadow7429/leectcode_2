// over 1 hour 因为计算好烦， 思路并不难
// https://leetcode.com/problems/game-of-life/

public class Solution {
    public void gameOfLife(int[][] board) {
        if (board.length == 0 || board[0].length == 0) return;
        
        boolean[] turn  = new boolean[board[0].length];
        Arrays.fill(turn, false);
        boolean leftpast = false;
        
        for (int i = 0; i < board.length; i++){
            for (int j = 0; j < board[i].length; j++){
                int count = 0;
                if ((i - 1) >= 0 && (j - 1) >=0) {
                    if ((board[i - 1][j - 1] == 1 && leftpast == false) || 
                         (board[i - 1][j - 1] == 0 && leftpast == true)) count++;
                }
                if ((i - 1) >=0){
                    if ((board[i - 1][j] == 1 && turn[j] == false) || 
                         (board[i - 1][j] == 0 && turn[j] == true)) count++;
                    leftpast = turn[j];
                } 
                if ((i - 1) >= 0 && (j + 1) < board[i - 1].length){
                    if ((board[i - 1][j + 1] == 1 && turn[j + 1] == false) ||
                         (board[i - 1][j + 1] == 0 && turn[j + 1] == true)) count++;
                }
                if ((j + 1) < board[i].length){
                    if (board[i][j + 1] == 1) count++;
                }
                if ((j - 1) >= 0){
                    if ((board[i][j - 1] == 1 && turn[j - 1] == false) ||
                         (board[i][j - 1] == 0 && turn[j - 1] == true)) count++;

                }
                if ((i + 1) < board.length && (j - 1) >= 0){
                    if (board[i + 1][j - 1] == 1) count ++;
                }
                if ((i + 1) < board.length) {
                    if (board[i + 1][j] == 1) count++;
                }
                if ((i + 1) < board.length && (j + 1) < board[i + 1].length){
                    if (board[i + 1][j + 1] == 1) count++;
                }
                
                if (board[i][j] == 0){
                    if (count == 3){
                        board[i][j] = 1;
                        turn[j] = true;
                    } 
                    else turn[j] = false;
                }
                else if (board[i][j] == 1){
                    if (count != 2 && count != 3){
                        board[i][j] =  0;  
                        turn[j] = true;
                    }
                    else turn[j] = false;
                }   
            }
        }
        return;
    }
}
