// startTime: 10: 27
// finishTime: 11: 00
// https://leetcode.com/problems/maximal-square/

/*
思路就是利用square的特点，先判断对角线上的对着的点是不是1，然后再判断新增加的这些点是不是都为1。
*/
public class Solution {
    public int maximalSquare(char[][] matrix) {
        if (matrix == null || matrix.length == 0 || matrix[0].length == 0) return 0;
        int res = 0;
        for (int i = 0; i < matrix.length; i++){
            for (int j = 0; j < matrix[i].length; j++){
                if (matrix[i][j] == '0') continue;
                int a = 0;
                boolean c = false;
                while (i + a < matrix.length && j + a < matrix[i].length){
                    if (matrix[i + a][j + a] == '0') break;
                    boolean check = true;
                    for (int t1 = j; t1 < j + a; t1++){
                        if (matrix[i + a][t1] == '0') {
                            check = false;
                            break;
                        }
                    }
                    for (int t2 = i; t2 < i + a; t2++){
                        if (matrix[t2][j + a] == '0'){
                            check = false;
                            break;
                        }
                    }
                    if (check == true) {
                        a++;
                    }
                    else break;
                }
                res = Math.max(res, (int)Math.pow(a, 2));
            }
        }
        return res;
    }
}
